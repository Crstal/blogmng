<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.crystal.blog.dao.mapper.ArticleMapper">
  <resultMap id="BaseResultMap" type="com.crystal.blog.dao.model.Article">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="category_code" jdbcType="VARCHAR" property="categoryCode" />
    <result column="category_name" jdbcType="VARCHAR" property="categoryName" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="pre_article_id" jdbcType="INTEGER" property="preArticleId" />
    <result column="pre_article_title" jdbcType="VARCHAR" property="preArticleTitle" />
    <result column="next_article_id" jdbcType="INTEGER" property="nextArticleId" />
    <result column="next_article_title" jdbcType="VARCHAR" property="nextArticleTitle" />
    <result column="content_id" jdbcType="INTEGER" property="contentId" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="follow_count" jdbcType="INTEGER" property="followCount" />
    <result column="comment_count" jdbcType="INTEGER" property="commentCount" />
    <result column="visit_count" jdbcType="INTEGER" property="visitCount" />
    <result column="create_by" jdbcType="VARCHAR" property="createBy" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_by" jdbcType="VARCHAR" property="updateBy" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, user_id, category_code, category_name, title, pre_article_id, pre_article_title, 
    next_article_id, next_article_title, content_id, status, follow_count, comment_count, 
    visit_count, create_by, create_time, update_by, update_time
  </sql>
  <select id="selectByExample" parameterType="com.crystal.blog.dao.model.ArticleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from article
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from article
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from article
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.crystal.blog.dao.model.ArticleExample">
    delete from article
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.crystal.blog.dao.model.Article">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into article (user_id, category_code, category_name, 
      title, pre_article_id, pre_article_title, 
      next_article_id, next_article_title, content_id, 
      status, follow_count, comment_count, 
      visit_count, create_by, create_time, 
      update_by, update_time)
    values (#{userId,jdbcType=INTEGER}, #{categoryCode,jdbcType=VARCHAR}, #{categoryName,jdbcType=VARCHAR}, 
      #{title,jdbcType=VARCHAR}, #{preArticleId,jdbcType=INTEGER}, #{preArticleTitle,jdbcType=VARCHAR}, 
      #{nextArticleId,jdbcType=INTEGER}, #{nextArticleTitle,jdbcType=VARCHAR}, #{contentId,jdbcType=INTEGER}, 
      #{status,jdbcType=TINYINT}, #{followCount,jdbcType=INTEGER}, #{commentCount,jdbcType=INTEGER}, 
      #{visitCount,jdbcType=INTEGER}, #{createBy,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateBy,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.crystal.blog.dao.model.Article">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into article
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="categoryCode != null">
        category_code,
      </if>
      <if test="categoryName != null">
        category_name,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="preArticleId != null">
        pre_article_id,
      </if>
      <if test="preArticleTitle != null">
        pre_article_title,
      </if>
      <if test="nextArticleId != null">
        next_article_id,
      </if>
      <if test="nextArticleTitle != null">
        next_article_title,
      </if>
      <if test="contentId != null">
        content_id,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="followCount != null">
        follow_count,
      </if>
      <if test="commentCount != null">
        comment_count,
      </if>
      <if test="visitCount != null">
        visit_count,
      </if>
      <if test="createBy != null">
        create_by,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateBy != null">
        update_by,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="categoryCode != null">
        #{categoryCode,jdbcType=VARCHAR},
      </if>
      <if test="categoryName != null">
        #{categoryName,jdbcType=VARCHAR},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="preArticleId != null">
        #{preArticleId,jdbcType=INTEGER},
      </if>
      <if test="preArticleTitle != null">
        #{preArticleTitle,jdbcType=VARCHAR},
      </if>
      <if test="nextArticleId != null">
        #{nextArticleId,jdbcType=INTEGER},
      </if>
      <if test="nextArticleTitle != null">
        #{nextArticleTitle,jdbcType=VARCHAR},
      </if>
      <if test="contentId != null">
        #{contentId,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="followCount != null">
        #{followCount,jdbcType=INTEGER},
      </if>
      <if test="commentCount != null">
        #{commentCount,jdbcType=INTEGER},
      </if>
      <if test="visitCount != null">
        #{visitCount,jdbcType=INTEGER},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.crystal.blog.dao.model.ArticleExample" resultType="java.lang.Long">
    select count(*) from article
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update article
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.categoryCode != null">
        category_code = #{record.categoryCode,jdbcType=VARCHAR},
      </if>
      <if test="record.categoryName != null">
        category_name = #{record.categoryName,jdbcType=VARCHAR},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.preArticleId != null">
        pre_article_id = #{record.preArticleId,jdbcType=INTEGER},
      </if>
      <if test="record.preArticleTitle != null">
        pre_article_title = #{record.preArticleTitle,jdbcType=VARCHAR},
      </if>
      <if test="record.nextArticleId != null">
        next_article_id = #{record.nextArticleId,jdbcType=INTEGER},
      </if>
      <if test="record.nextArticleTitle != null">
        next_article_title = #{record.nextArticleTitle,jdbcType=VARCHAR},
      </if>
      <if test="record.contentId != null">
        content_id = #{record.contentId,jdbcType=INTEGER},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.followCount != null">
        follow_count = #{record.followCount,jdbcType=INTEGER},
      </if>
      <if test="record.commentCount != null">
        comment_count = #{record.commentCount,jdbcType=INTEGER},
      </if>
      <if test="record.visitCount != null">
        visit_count = #{record.visitCount,jdbcType=INTEGER},
      </if>
      <if test="record.createBy != null">
        create_by = #{record.createBy,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateBy != null">
        update_by = #{record.updateBy,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update article
    set id = #{record.id,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      category_code = #{record.categoryCode,jdbcType=VARCHAR},
      category_name = #{record.categoryName,jdbcType=VARCHAR},
      title = #{record.title,jdbcType=VARCHAR},
      pre_article_id = #{record.preArticleId,jdbcType=INTEGER},
      pre_article_title = #{record.preArticleTitle,jdbcType=VARCHAR},
      next_article_id = #{record.nextArticleId,jdbcType=INTEGER},
      next_article_title = #{record.nextArticleTitle,jdbcType=VARCHAR},
      content_id = #{record.contentId,jdbcType=INTEGER},
      status = #{record.status,jdbcType=TINYINT},
      follow_count = #{record.followCount,jdbcType=INTEGER},
      comment_count = #{record.commentCount,jdbcType=INTEGER},
      visit_count = #{record.visitCount,jdbcType=INTEGER},
      create_by = #{record.createBy,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_by = #{record.updateBy,jdbcType=VARCHAR},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.crystal.blog.dao.model.Article">
    update article
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="categoryCode != null">
        category_code = #{categoryCode,jdbcType=VARCHAR},
      </if>
      <if test="categoryName != null">
        category_name = #{categoryName,jdbcType=VARCHAR},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="preArticleId != null">
        pre_article_id = #{preArticleId,jdbcType=INTEGER},
      </if>
      <if test="preArticleTitle != null">
        pre_article_title = #{preArticleTitle,jdbcType=VARCHAR},
      </if>
      <if test="nextArticleId != null">
        next_article_id = #{nextArticleId,jdbcType=INTEGER},
      </if>
      <if test="nextArticleTitle != null">
        next_article_title = #{nextArticleTitle,jdbcType=VARCHAR},
      </if>
      <if test="contentId != null">
        content_id = #{contentId,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="followCount != null">
        follow_count = #{followCount,jdbcType=INTEGER},
      </if>
      <if test="commentCount != null">
        comment_count = #{commentCount,jdbcType=INTEGER},
      </if>
      <if test="visitCount != null">
        visit_count = #{visitCount,jdbcType=INTEGER},
      </if>
      <if test="createBy != null">
        create_by = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        update_by = #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.crystal.blog.dao.model.Article">
    update article
    set user_id = #{userId,jdbcType=INTEGER},
      category_code = #{categoryCode,jdbcType=VARCHAR},
      category_name = #{categoryName,jdbcType=VARCHAR},
      title = #{title,jdbcType=VARCHAR},
      pre_article_id = #{preArticleId,jdbcType=INTEGER},
      pre_article_title = #{preArticleTitle,jdbcType=VARCHAR},
      next_article_id = #{nextArticleId,jdbcType=INTEGER},
      next_article_title = #{nextArticleTitle,jdbcType=VARCHAR},
      content_id = #{contentId,jdbcType=INTEGER},
      status = #{status,jdbcType=TINYINT},
      follow_count = #{followCount,jdbcType=INTEGER},
      comment_count = #{commentCount,jdbcType=INTEGER},
      visit_count = #{visitCount,jdbcType=INTEGER},
      create_by = #{createBy,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_by = #{updateBy,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>


  <!--  自己写sql        -->
  <select id="queryArticleListWithPage" parameterType="com.crystal.blog.common.bean.param.ArticleQueryParam" resultMap="BaseResultMap">
    select
    a.id, a.user_id, a.category_code, a.category_name, a.title, a.follow_count, a.comment_count, a.content_id, a.status, a.visit_count, a.create_by, a.create_time, a.update_by, a.update_time
    from article a left join article_tag b on a.id=b.article_id
    <trim>
      <if test="userId != null">
        and user_id = #{userId,jdbcType=INTEGER}
      </if>
      <if test="userId != null">
        and category_code = #{categoryCode,jdbcType=VARCHAR}
      </if>
      <if test="title != null">
        and title = #{title,jdbcType=VARCHAR}
      </if>
      <if test="status != null">
        and status = #{status,jdbcType=TINYINT}
      </if>
      <if test="search != null">
        and title like #{search,jdbcType=VARCHAR}
      </if>
      <if test="tag != null">
        and b.tag = tag
      </if>
    </trim>
    order by a.update_time desc, a.create_time desc
  </select>
</mapper>