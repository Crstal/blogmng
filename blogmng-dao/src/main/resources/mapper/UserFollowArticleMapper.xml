<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.crystal.blog.dao.mapper.UserFollowArticleMapper">
  <resultMap id="BaseResultMap" type="com.crystal.blog.dao.model.UserFollowArticle">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="follow_article_Id" jdbcType="INTEGER" property="followArticleId" />
    <result column="follow_article_title" jdbcType="VARCHAR" property="followArticleTitle" />
    <result column="create_by" jdbcType="VARCHAR" property="createBy" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, user_id, follow_article_Id, follow_article_title, create_by, create_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user_follow_article
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user_follow_article
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.crystal.blog.dao.model.UserFollowArticle">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into user_follow_article (user_id, follow_article_Id, follow_article_title, 
      create_by, create_time)
    values (#{userId,jdbcType=INTEGER}, #{followArticleId,jdbcType=INTEGER}, #{followArticleTitle,jdbcType=VARCHAR}, 
      #{createBy,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.crystal.blog.dao.model.UserFollowArticle">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into user_follow_article
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="followArticleId != null">
        follow_article_Id,
      </if>
      <if test="followArticleTitle != null">
        follow_article_title,
      </if>
      <if test="createBy != null">
        create_by,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="followArticleId != null">
        #{followArticleId,jdbcType=INTEGER},
      </if>
      <if test="followArticleTitle != null">
        #{followArticleTitle,jdbcType=VARCHAR},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.crystal.blog.dao.model.UserFollowArticle">
    update user_follow_article
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="followArticleId != null">
        follow_article_Id = #{followArticleId,jdbcType=INTEGER},
      </if>
      <if test="followArticleTitle != null">
        follow_article_title = #{followArticleTitle,jdbcType=VARCHAR},
      </if>
      <if test="createBy != null">
        create_by = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.crystal.blog.dao.model.UserFollowArticle">
    update user_follow_article
    set user_id = #{userId,jdbcType=INTEGER},
      follow_article_Id = #{followArticleId,jdbcType=INTEGER},
      follow_article_title = #{followArticleTitle,jdbcType=VARCHAR},
      create_by = #{createBy,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>